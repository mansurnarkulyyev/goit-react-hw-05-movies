{"version":3,"file":"static/js/241.4ee944e6.chunk.js","mappings":"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","sources":["webpack://react-router-dom-example/./src/pages/CastsPage/castsPage.module.css?a5d5","pages/CastsPage/CastsPage.jsx","shared/Api-services/movies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"error\":\"castsPage_error__MQ-qn\",\"castWrapper\":\"castsPage_castWrapper__0yKOT\",\"list\":\"castsPage_list__SgvvU\",\"nameReal\":\"castsPage_nameReal__jFwjV\",\"item\":\"castsPage_item__NhOoe\"};","import { useState, useEffect } from \"react\";\nimport { TailSpin } from \"react-loader-spinner\";\nimport { useParams } from \"react-router-dom\";\nimport { getMovieCreditsById } from \"../../shared/Api-services/movies\";\n\nimport st from \"./castsPage.module.css\";\nconst CastsPage = () => {\n  const [state, setState] = useState({\n    items: [],\n    error: null,\n    loading: false,\n  });\n  const { id: StrId } = useParams();\n  const id = Number(StrId);\n\n  useEffect(() => {\n    const fetchCastsById = async () => {\n      setState((prevState) => {\n        return { ...prevState, loading: true, error: false };\n      });\n      try {\n        const { cast } = await getMovieCreditsById(id);\n\n        const dataCast = cast.length > 11 ? cast.slice(0, 10) : cast;\n\n        setState((prevState) => {\n          return { ...prevState, loading: false, items: dataCast };\n        });\n      } catch (error) {\n        setState((prevState) => {\n          return { ...prevState, loading: false, error };\n        });\n      }\n    };\n    if (id) {\n      fetchCastsById();\n    }\n  }, [id]);\n\n  const { items, error, loading } = state;\n\n  const elements = items.map((el) => {\n    const { id, name, profile_path, character } = el;\n    const profileImg = profile_path\n      ? profile_path\n      : \"/xcaHWHQZsqxFDig9Qw6CYRVXtW2.jpg\";\n\n    return (\n      <li key={id} className={st.item}>\n        <img\n          className={st.icon}\n          src={`https://image.tmdb.org/t/p/w600_and_h900_bestv2${profileImg}`}\n          alt={name}\n          width=\"100\"\n          height=\"150\"\n        />\n        <p className={st.nameReal}>{name}</p>\n        <p className={st.name}>{character}</p>{\" \"}\n      </li>\n    );\n  });\n\n  return (\n    <div>\n      <h3>Cast</h3>\n      {error && (\n        <p className={st.error}>We are sorry, a server error occurred</p>\n      )}\n      {loading && <p className={st.error}><TailSpin /></p>}\n      {elements.length > 0 && <ul className={st.list}>{elements}</ul>}\n    </div>\n  );\n};\n\nexport default CastsPage;\n","import axios from \"axios\";\nconst instance = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n});\nconst APIkey = \"5c333966bb14d20047a3fe3d6491ade8\";\n\nexport const getTrendingMovies = async (page = 1) => {\n  const {\n    data: { results },\n  } = await instance.get(\"trending/movie/day\", {\n    params: {\n      api_key: APIkey,\n      page,\n    },\n  });\n  return results;\n};\n\nexport const getMovieByQwery = async (query, page = 1) => {\n  const { data } = await instance.get(\"search/movie\", {\n    params: {\n      api_key: APIkey,\n      page,\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getMovieById = async (id) => {\n  const { data } = await instance.get(`movie/${id}`, {\n    params: {\n      api_key: APIkey,\n    },\n  });\n  return data;\n};\n\nexport const getMovieCreditsById = async (id) => {\n  const { data } = await instance.get(`movie/${id}/credits`, {\n    params: {\n      api_key: APIkey,\n    },\n  });\n  return data;\n};\n\nexport const getMovieReviewsById = async (id) => {\n  const { data } = await instance.get(`movie/${id}/reviews`, {\n    params: {\n      api_key: APIkey,\n    },\n  });\n  return data;\n};\n"],"names":["useState","items","error","loading","state","setState","StrId","useParams","id","Number","useEffect","fetchCastsById","prevState","getMovieCreditsById","cast","dataCast","length","slice","elements","map","el","name","profile_path","character","profileImg","className","st","src","alt","width","height","instance","axios","baseURL","APIkey","getTrendingMovies","page","get","params","api_key","results","data","getMovieByQwery","query","getMovieById","getMovieReviewsById"],"sourceRoot":""}